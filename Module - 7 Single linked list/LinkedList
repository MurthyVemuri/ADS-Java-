import java.util.*;

class MyLinkedList {

	private Node head;
	private int listCount;


	public MyLinkedList() {

		head = new Node(null);
		listCount = 0;
	}

	//adding a node to the last i.e before the null value.
	public void add(Object data){
		Node temp = new Node(data);
		Node current = head;

		while (current.getNext() != null) {
			current = current.getNext();
		}

		current.setNext(temp);
		listCount++;
	}

	// Inserting node at a given Index position
	public void add(Object data, int index){
		Node temp = new Node(data);
		Node current = head;

		for (int i = 1; i < index && current.getNext() != null; i++) {
			current = current.getNext();
		}

		temp.setNext(current.getNext());

		current.setNext(temp);
		listCount++;
	}

	public Object get(int index){

		if (index <= 0)
		return null;

		Node current = head.getNext();
		for (int i = 1; i < index; i++) {
			if (current.getNext() == null)
				return null;

			current = current.getNext();
		}
		return current.getData();
	}

	public boolean remove(int index){

		if (index < 1 || index > size())
			return false;

		Node current = head;
		for (int i = 1; i < index; i++) {
			if (current.getNext() == null)
				return false;

			current = current.getNext();
		}
		current.setNext(current.getNext().getNext());
		listCount--; 
		return true;
	}

	public int size(){
		return listCount;
	}

	public String toString() {
		Node current = head.getNext();
		String output = "";
		if(current == null) 
			return "LinkedList is empty";
		while (current != null) {
			output += "[" + current.getData().toString() + "]";
			current = current.getNext();
		}
		return output;
	}
}

class Node {

	Node next;
	Object data;

	public Node(Object dataValue) {
		next = null;
		data = dataValue;
	}

	// public Node(Object dataValue, Node nextValue) {
	// 	next = nextValue;
	// 	data = dataValue;
	// }

	public Object getData() {
		return data;
	}

	public void setData(Object dataValue) {
		data = dataValue;
	}

	public Node getNext() {
		return next;
	}

	public void setNext(Node nextValue) {
		next = nextValue;
	}
}


public class LinkedListTest {

	public static void main(String[] args) {
		MyLinkedList linkedlist = new MyLinkedList();
		Scanner scan = new Scanner(System.in);
		do{
			System.out.println("1. Adding a value ");
			System.out.println("2. Adding a value in given position");
			System.out.println("3. Value at a particular position");
			System.out.println("4. Remove value at given index");
			System.out.println("5. Print Linked list");
			System.out.println("6. LinkedList size ");
			int choice = scan.nextInt();
			switch(choice) {
				case 1:
					int value = scan.nextInt();
					linkedlist.add(value);
					break;

				case 2:
					int valueIndex = scan.nextInt();
					int index = scan.nextInt();
					linkedlist.add(valueIndex , index);
					break;

				case 3:
					int indexVal = scan.nextInt();
					System.out.println(linkedlist.get(indexVal));
					break;

				case 4:
					int removeIndex = scan.nextInt();
					System.out.println(linkedlist.remove(removeIndex));
					break;

				case 5:
					System.out.println(linkedlist);
					break;

				case 6:
					System.out.println(linkedlist.size());
					break;	

				default:
				System.out.println("Invalid option");
			}

			if(choice >= 7) {
				break;
			}
		} while(true);
	}
}



/*
public static void main(String[] args) {
		MyLinkedList linkedlist = new MyLinkedList();

		linkedlist.add("1");
		linkedlist.add("2");
		linkedlist.add("3");
		linkedlist.add("4");
		linkedlist.add("5");

		System.out.println("Print linkedlist: " + linkedlist);

		System.out.println("Print linkedlist size: " + linkedlist.size());

		System.out.println("Get 3rd element: " + linkedlist.get(3));

		System.out.println("Remove 2nd element: " + linkedlist.remove(2));

		System.out.println("Get 3rd element: " + linkedlist.get(3));
		System.out.println("Print linkedlist size: " + linkedlist.size());
		System.out.println("Print linkedlist: " + linkedlist);
	}

*/
